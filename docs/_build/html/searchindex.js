Search.setIndex({"docnames": ["README_base", "content", "feature_list", "general_example_1", "general_example_2", "index", "modules", "readme", "refineryframe", "scores"], "filenames": ["README_base.md", "content.md", "feature_list.md", "general_example_1.md", "general_example_2.md", "index.rst", "modules.rst", "readme.rst", "refineryframe.rst", "scores.md"], "titles": ["refineryframe", "Package usage example", "Feature List", "Creating example data (exceptionally messy dataframe)", "Refiner class settings <span class=\"raw-html-m2r\"><a name=\"refiner-class-settings\"></a></span>", "Welcome to documentation for refineryframe package!", "refineryframe", "refineryframe", "refineryframe package", "Data quality scores <span class=\"raw-html-m2r\"><a class=\"anchor\" id=\"scores\"></a></span>"], "terms": {"index": [2, 5, 8], "modul": [5, 6], "search": [2, 5, 8], "page": 5, "packag": [0, 6, 7], "submodul": 6, "demo": [3, 4, 6], "detect_unexpect": 6, "add_index_to_duplicate_column": [2, 6, 8], "check_col_names_typ": [2, 3, 6, 8], "check_date_format": [2, 3, 6, 8], "check_date_rang": [2, 6, 8], "check_duplicate_col_nam": [2, 6, 8], "check_dupl": [2, 3, 6, 8], "check_inf_valu": [2, 3, 6, 8], "check_missing_typ": [2, 3, 6, 8], "check_missing_valu": [2, 3, 6, 8], "check_numeric_rang": [2, 3, 6, 8], "detect_unexpected_valu": [2, 3, 4, 6, 8, 9], "other": [0, 5, 6, 7], "get_type_dict": [6, 8], "set_typ": [2, 3, 6, 8], "shoutout": [6, 8], "treat_unexpected_cond": [6, 8], "refin": [1, 2, 6], "get_refiner_set": [2, 4, 6, 8], "get_type_dict_from_datafram": [2, 3, 6, 8], "get_unexpected_exceptions_scan": [2, 4, 6, 8], "initialize_logg": [6, 8], "replace_unexpected_valu": [2, 3, 6, 8, 9], "set_refiner_set": [2, 4, 6, 8], "set_type_dict": [2, 6, 8], "shout": [6, 8], "replace_unexpect": 6, "content": 6, "py": 8, "support": 8, "contain": [2, 3, 8], "definit": 8, "test": [3, 4, 8], "datafram": [2, 8, 9], "etc": 8, "data": [0, 1, 2, 5, 7, 8], "qualiti": [1, 3, 8], "check": [2, 4, 8, 9], "thi": [8, 9], "function": 8, "detect": [0, 1, 2, 5, 7, 8], "unexpect": [0, 1, 2, 5, 7, 8, 9], "valu": [0, 1, 2, 5, 7, 8, 9], "panda": [2, 3, 4, 8], "help": 8, "identifi": 8, "potenti": 8, "issu": 8, "The": [0, 3, 4, 5, 7, 8, 9], "cover": 8, "variou": 8, "aspect": 8, "valid": 8, "includ": 8, "miss": [2, 4, 8, 9], "type": [1, 2, 4, 8], "duplic": [2, 3, 4, 8], "incorrect": [3, 8], "date": [2, 3, 4, 8], "format": [2, 3, 4, 8], "out": 8, "rang": [2, 3, 4, 8], "numer": [2, 3, 4, 8], "outsid": [3, 8], "specifi": 8, "1": [3, 4, 8, 9], "missing_typ": [3, 4, 8], "independ": [1, 8], "true": [3, 8], "logger": 8, "log": [3, 4, 8], "instanc": [2, 8], "each": [2, 8, 9], "column": [1, 2, 3, 4, 8, 9], "warn": [3, 4, 8], "messag": 8, "ani": [0, 2, 5, 7, 8], "ar": [2, 3, 8, 9], "found": 8, "count": [2, 8, 9], "number": [2, 8, 9], "nan": [2, 3, 8], "none": [2, 3, 4, 8], "nat": [2, 3, 8], "infinit": 8, "inf": [2, 3, 4, 8], "expected_date_format": [4, 8], "y": [4, 8], "m": [4, 8, 9], "d": [4, 8], "datetim": [2, 8], "have": [0, 2, 5, 7, 8], "expect": [2, 3, 4, 8], "non": [3, 4, 8], "subset": 8, "base": [0, 2, 5, 7, 8, 9], "types_dict_str": [3, 8], "ha": [2, 3, 4, 8, 9], "same": [2, 8], "name": [2, 8], "dictionari": [2, 8], "those": [2, 8, 9], "numeric_col": 8, "lower_bound": [4, 8], "float": 8, "upper_bound": [4, 8], "ignore_valu": [4, 8], "within": 8, "earliest_d": [3, 4, 8], "1900": [4, 8], "01": [3, 4, 8], "latest_d": [3, 4, 8], "2100": [4, 8], "12": 8, "31": 8, "ignore_d": [4, 8], "unexpected_except": [2, 3, 8], "col_names_typ": [3, 4, 8], "missing_valu": [3, 4, 8], "inf_valu": [3, 4, 8], "date_format": [3, 4, 8], "date_rang": [3, 4, 8], "numeric_rang": [3, 4, 8], "unexpected_condit": [3, 4, 8], "ids_for_dup": [], "test_duv_flags_path": 8, "numeric_lower_bound": [3, 8], "0": [3, 4, 8, 9], "numeric_upper_bound": [3, 8], "print_scor": 8, "run": 8, "seri": 8, "duv_scor": [3, 4, 8], "repres": 8, "percentag": [3, 4, 8], "pass": [3, 4, 8, 9], "note": 8, "some": [3, 8, 9], "us": [1, 2, 8, 9], "instead": 8, "print": [3, 4, 8], "user": 8, "can": [8, 9], "except": 8, "certain": [3, 8], "defin": [1, 8], "addit": [3, 8], "condit": [0, 1, 5, 7, 8, 9], "core": 8, "frame": 8, "column_name_freq": 8, "dict": [2, 8], "from": [0, 2, 3, 4, 5, 7, 8], "insani_dei": 8, "miniconda3": 8, "env": 8, "tf_env": 8, "lib": 8, "python3": 8, "9": [3, 8], "__init__": 8, "sourc": [0, 5, 7, 8], "add": [2, 8], "an": [0, 2, 5, 7, 8], "A": 8, "where": 8, "kei": [2, 8], "occurr": 8, "updat": [2, 8], "silent": 8, "bool": 8, "fals": [3, 4, 8], "throw_error": 8, "threshold": [4, 8], "incorrect_dtypes_scor": [4, 8], "100": [3, 4, 8], "missing_scor": [4, 8], "given": [2, 8], "item": [2, 8], "arg": 8, "column_dict": 8, "boolean": 8, "indic": [8, 9], "whether": [8, 9], "str": [3, 8], "date_format_scor": [4, 8], "input": [2, 8], "yyyi": [2, 8], "mm": [2, 8], "dd": [2, 8], "08": [3, 4, 8], "25": [4, 8], "list": 8, "early_dates_scor": [4, 8], "future_dates_scor": [4, 8], "option": 8, "earliest": 8, "allow": 8, "default": 8, "latest": 8, "doe": [8, 9], "anyth": 8, "If": 8, "rais": 8, "valueerror": 8, "when": 8, "continu": 8, "execut": 8, "i": [0, 3, 5, 7, 8, 9], "object": [3, 8], "error": [3, 4, 8], "root": 8, "inform": 8, "about": 8, "column_names_duplicates_test": 8, "otherwis": 8, "key_dup_scor": [4, 8], "row_dup_scor": [4, 8], "consid": 8, "all": [3, 4, 8, 9], "columnsar": 8, "int": 8, "inf_scor": [4, 8], "cat_scor": [4, 8], "date_scor": [4, 8], "numeric_scor": [4, 8], "take": [2, 8, 9], "correspond": 8, "missing_values_scor": [4, 8], "low_numeric_scor": [4, 8], "upper_numeric_scor": [4, 8], "lower": [3, 4, 8], "bound": 8, "infin": 8, "upper": [3, 8], "ignor": 8, "empti": 8, "tupl": 8, "two": 8, "first": 8, "met": 8, "second": 8, "character_not_deliv": [3, 4, 8], "date_not_deliv": [3, 4, 8], "1850": [3, 4, 8], "09": [3, 4, 8], "numeric_not_deliv": [3, 4, 8], "999": [3, 4, 8], "unexpected_exceptions_error": [4, 8], "col_name_dupl": [4, 8], "ccnt_score": [4, 8], "cdf_score": [4, 8], "cdr_score": [4, 8], "cmt_score": [4, 8], "cmv_score": [4, 8], "cnr_score": [4, 8], "dup_scor": [4, 8], "ids_for_dedup": [4, 8], "map": [3, 8], "follow": 8, "path": [3, 4, 8], "string": [2, 3, 8], "describ": 8, "accept": 8, "lowest": 8, "highest": 8, "between": [0, 5, 7, 8, 9], "mean": 8, "what": [], "unexpected_exceptions_scan": 8, "util": 8, "manipul": 8, "handl": 8, "dline": 8, "mess": [4, 8], "dotline_length": [4, 8], "50": [3, 4, 8], "line": 8, "text": [3, 8, 9], "length": 8, "pd": [3, 4, 8], "explicit": 8, "stringout": 8, "represent": [2, 8], "replace_dict": [3, 4, 8], "chang": [2, 8], "intend": [2, 8], "df": [3, 8], "descript": [3, 8], "group": [3, 8], "featur": [3, 8], "queri": [3, 8], "replac": [1, 2, 8], "depend": 8, "re": 8, "pleas": 8, "refer": 8, "docstr": 8, "individu": 8, "detail": 8, "usag": 8, "exampl": 8, "charact": [3, 4, 8], "categori": [3, 8], "id": 8, "begin": [3, 8], "end": [3, 8], "extract": [1, 2, 8], "specif": 8, "do": 8, "match": 8, "typeerror": 8, "cannot": 8, "successfulli": 8, "output_typ": 8, "pline": 8, "head1": 8, "titl": 8, "subtitl": 8, "subtitle2": 8, "subtitle3": 8, "header": 8, "being": 8, "treat": 8, "regex": [3, 8], "pattern": 8, "select": 8, "row": [8, 9], "provid": [2, 8], "class": [1, 8], "encapsul": 8, "design": 8, "work": 8, "perform": 8, "preprocess": [0, 4, 5, 7, 8], "initi": [0, 1, 5, 7, 8], "shout_typ": [4, 8], "head2": [4, 8], "logger_nam": [4, 8], "loggerlvl": [3, 4, 8], "20": [3, 4, 8], "unexpected_exceptions_duv": [3, 4, 8], "unexpected_exceptions_ruv": [4, 8], "capit": [3, 4, 8], "irregular_valu": [3, 4, 8], "unicode_charact": [3, 4, 8], "attribut": 8, "process": 8, "differ": [8, 9], "custom": 8, "method": 8, "output": 8, "e": 8, "g": 8, "level": 8, "should": 8, "dure": 8, "duv": [1, 4, 8], "callabl": 8, "type_dict": [3, 4, 8], "save": [2, 8], "them": [2, 8, 9], "later": [2, 3, 8], "set": [1, 2, 3, 8], "column_names_freq": 8, "appropri": [2, 8], "test_ruv_flags_path": 8, "It": [8, 9], "relat": 8, "unicod": [3, 8], "ruv_scor": 8, "score": [0, 1, 4, 5, 7, 8], "df1": [], "df2": [], "df_dup": [], "df_dup2": [], "refiner_set": 4, "scanned_unexpected_except": 4, "tn": [3, 4], "tns2": 4, "unexpected_exceptions2": [], "types_dict_str2": [], "types_dict_str3": [], "test_add_index_to_duplicate_columns_error": [], "test_add_index_to_duplicate_columns_error2": [], "test_check_col_names_types_error": [], "test_check_col_names_types_error2": [], "test_check_col_names_types_error3": [], "test_check_col_names_types_error4": [], "caplog": [], "test_check_col_names_types_scores_check_error": [], "test_check_date_format_error": [], "test_check_date_format_print_error": [], "test_check_date_format_scores_check_error": [], "test_check_date_range_early_error": [], "test_check_date_range_error": [], "test_check_date_range_error2": [], "test_check_date_range_error3": [], "test_check_date_range_latest_error": [], "test_check_date_range_scores_ckeck_error": [], "test_check_duplicate_col_names_error": [], "test_check_duplicate_col_names_error2": [], "test_check_duplicates_error": [], "test_check_duplicates_error2": [], "test_check_duplicates_error3": [], "test_check_inf_values_error": [], "test_check_inf_values_print_error": [], "test_check_missing_types_cat_error": [], "test_check_missing_types_date_error": [], "test_check_missing_types_exc_error": [], "test_check_missing_types_int_error": [], "test_check_missing_types_scores_check_error": [], "test_check_missing_types_scores_error": [], "test_check_missing_values_error": [], "test_check_missing_values_scores_check_error": [], "test_check_numeric_range_error": [], "test_check_numeric_range_lower_error": [], "test_check_numeric_range_scores_check_error": [], "test_check_numeric_range_upper_error": [], "test_detect_unexpected_values_error": [], "test_check_col_names_typ": [], "test_check_date_format": [], "test_check_dupl": [], "test_check_duplicates_not_independ": [], "test_check_inf_valu": [], "test_check_missing_typ": [], "test_check_missing_valu": [], "test_check_numeric_rang": [], "test_detect_unexpected_valu": [], "test_detect_unexpected_values_with_cond": [], "test_duv_score1": [], "test_get_refiner_set": [], "test_get_unexpected_exceptions_scan": [], "test_getting_typ": [], "test_make_refiner_class": [], "test_replace_unexpect": [], "test_replace_unexpected_with_cond": [], "test_set_refiner_set": [], "test_setting_typ": [], "throw": 8, "check_scor": 8, "7": [], "goal": [0, 5, 7, 9], "simplifi": [0, 5, 7, 9], "life": [0, 5, 7], "scientist": [0, 5, 7], "deal": [0, 5, 7], "imperfect": [0, 5, 7], "raw": [0, 5, 7], "suppos": [0, 5, 7], "clean": [0, 3, 5, 7, 9], "while": [0, 3, 4, 5, 7], "doubl": [0, 5, 7], "safeguard": [0, 5, 7], "product": [0, 5, 7, 9], "code": [0, 5, 7], "predifin": [0, 5, 7], "aris": [0, 5, 7], "busi": [0, 5, 7], "assumpt": [0, 5, 7], "well": [0, 5, 7], "suit": [0, 5, 7], "step": [0, 5, 7], "ml": [0, 5, 7], "pipelin": [0, 5, 7], "situat": [0, 5, 7, 9], "gather": [0, 5, 7], "train": [0, 5, 7, 9], "develop": [0, 5, 7], "kyrylo": [0, 5, 7], "mordan": [0, 5, 7], "c": [0, 5, 7], "2023": [0, 5, 7], "via": [0, 5, 7], "pip": [0, 5, 7], "gener": [1, 9], "simpl": 1, "mould": 1, "complex": 1, "target": 1, "settign": 1, "scan": 1, "recreat": 1, "ident": 1, "ruv": 1, "refineryfram": [2, 3, 4], "paramet": 2, "return": 2, "import": [3, 4], "o": [3, 4], "sy": [3, 4], "numpi": [3, 4], "np": [3, 4], "append": [3, 4], "dirnam": [3, 4], "tiny_exampl": [3, 4], "num_id": 3, "numericcolumn": [3, 4], "numericcolumn_exept": [3, 4], "numericcolumn2": [3, 4], "numericcolumn3": 3, "datecolumn": 3, "datecolumn2": [3, 4], "datecolumn3": [3, 4], "charcolumn": [3, 4], "2022": 3, "2122": 3, "05": 3, "f\u00f3\u0142": 3, "2": [3, 4, 9], "996": [3, 4], "02": 3, "3": 3, "03": 3, "2021": 3, "4": [3, 4], "04": 3, "1000": [3, 4], "n\u00f3t": 3, "exp\u0119\u0107t\u0119d": 3, "5": [3, 9], "date_other_missing_typ": 3, "debug": [3, 4], "int64": 3, "float64": 3, "datetime64": 3, "n": [3, 9], "00": [3, 4], "wa": [3, 4], "97": [3, 4], "14": [3, 4], "na": [3, 4], "40": [3, 4], "80": [3, 4], "53": [3, 4], "33": [3, 4], "94": 3, "occur": [3, 4], "divis": [3, 4], "zero": [3, 4], "1920": 3, "presenc": 3, "52": 3, "98": 3, "75": 3, "96": 3, "propper": [3, 4], "66": 3, "67": 3, "Not": 3, "than": 3, "futur": 3, "presens": [3, 4], "colum": [3, 4], "88": [3, 4], "85": 3, "5384615384615384": 3, "col": [3, 9], "case": [3, 9], "latin": 3, "usabl": [3, 9], "44": 3, "uncorrect": 3, "32": 3, "22": 3, "correct": 3, "57": 3, "regex_column": 3, "r": 3, "ing": 3, "multicol": 3, "part": 3, "f": [3, 4], "cted": 3, "actual": 3, "dtype": 3, "89": 3, "60": [3, 4], "78": 3, "46": 3, "84": 3, "91": 3, "43": 3, "con": 3, "69": 3, "23": 3, "82": 3, "fol": 3, "90": 3, "ruv_score0": [3, 9], "ruv_score1": [3, 9], "ruv_score2": [3, 9], "8222": 3, "8889": 3, "9753": 3, "42": 4, "86": 4, "10": 4, "tns3": 4, "result": 9, "percentang": 9, "ideal": 9, "wors": 9, "scenario": 9, "score_": 9, "frac": 9, "sum": 9, "_": 9, "origin": 9, "determin": 9, "dataset": 9, "model": 9, "effectivelli": 9, "most": 9, "advanc": 9, "one": 9, "aim": 9, "accur": 9, "classiffi": 9, "hopeless": 9, "which": 9, "safeguad": 9, "signal": 9, "critic": 9, "fall": 9, "collect": 9, "These": 9, "experiment": 9, "so": 9, "causion": 9, "simplest": 9, "just": 9, "proport": 9, "avail": 9, "understood": 9, "portion": 9, "ruv0": 9, "j": 9, "unus": 9, "ij": 9, "version": 9, "median": 9, "squar": 9, "make": 9, "classif": 9, "better": 9, "trake": 9, "over": 9, "time": 9, "med_": 9, "med": 9, "along": 9, "divid": 9, "calcul": 9, "ruv1": 9, "advantag": 9, "fact": 9, "too": 9, "mani": 9, "completli": 9, "kind": 9, "mix": 9, "becom": 9, "below": 9, "supposedli": 9, "completelli": 9, "ruv2": 9, "instal": []}, "objects": {"": [[8, 0, 0, "-", "refineryframe"]], "refineryframe": [[8, 0, 0, "-", "demo"], [8, 0, 0, "-", "detect_unexpected"], [8, 0, 0, "-", "other"], [8, 0, 0, "-", "refiner"], [8, 0, 0, "-", "replace_unexpected"]], "refineryframe.detect_unexpected": [[8, 1, 1, "", "add_index_to_duplicate_columns"], [8, 1, 1, "", "check_col_names_types"], [8, 1, 1, "", "check_date_format"], [8, 1, 1, "", "check_date_range"], [8, 1, 1, "", "check_duplicate_col_names"], [8, 1, 1, "", "check_duplicates"], [8, 1, 1, "", "check_inf_values"], [8, 1, 1, "", "check_missing_types"], [8, 1, 1, "", "check_missing_values"], [8, 1, 1, "", "check_numeric_range"], [8, 1, 1, "", "detect_unexpected_values"]], "refineryframe.other": [[8, 1, 1, "", "get_type_dict"], [8, 1, 1, "", "set_types"], [8, 1, 1, "", "shoutOUT"], [8, 1, 1, "", "treat_unexpected_cond"]], "refineryframe.refiner": [[8, 2, 1, "", "Refiner"]], "refineryframe.refiner.Refiner": [[8, 3, 1, "", "add_index_to_duplicate_columns"], [8, 3, 1, "", "check_col_names_types"], [8, 3, 1, "", "check_date_format"], [8, 3, 1, "", "check_date_range"], [8, 3, 1, "", "check_duplicate_col_names"], [8, 3, 1, "", "check_duplicates"], [8, 3, 1, "", "check_inf_values"], [8, 3, 1, "", "check_missing_types"], [8, 3, 1, "", "check_missing_values"], [8, 3, 1, "", "check_numeric_range"], [8, 3, 1, "", "detect_unexpected_values"], [8, 3, 1, "", "get_refiner_settings"], [8, 3, 1, "", "get_type_dict_from_dataframe"], [8, 3, 1, "", "get_unexpected_exceptions_scaned"], [8, 3, 1, "", "initialize_logger"], [8, 3, 1, "", "replace_unexpected_values"], [8, 3, 1, "", "set_refiner_settings"], [8, 3, 1, "", "set_type_dict"], [8, 3, 1, "", "set_types"], [8, 3, 1, "", "shout"]], "refineryframe.replace_unexpected": [[8, 1, 1, "", "replace_unexpected_values"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"welcom": 5, "document": 5, "refineryfram": [0, 5, 6, 7, 8], "packag": [1, 5, 8], "": [], "indic": 5, "tabl": 5, "submodul": 8, "demo": 8, "modul": 8, "detect_unexpect": 8, "paramet": 8, "return": 8, "other": 8, "refin": [3, 4, 8], "replace_unexpect": 8, "content": [1, 5, 8], "setup": [], "test": [], "conftest": [], "test_detect_unexpect": [], "test_refin": [], "instal": [0, 5, 7], "usag": 1, "exampl": [1, 3], "featur": 2, "list": 2, "creat": 3, "data": [3, 9], "exception": 3, "messi": 3, "datafram": [3, 4], "defin": 3, "specif": 3, "class": [3, 4, 9], "anchor": [3, 9], "id": [3, 9], "basic": 3, "initi": [3, 4], "name": [3, 4], "initializn": 3, "us": [3, 4], "simpl": 3, "gener": 3, "condit": [3, 4], "check": 3, "independ": 3, "mould": 3, "type": 3, "main": [3, 4], "function": [3, 4], "detect": [3, 4], "unexpect": [3, 4], "valu": [3, 4], "replac": 3, "miss": 3, "complex": 3, "target": 3, "score": [3, 9], "set": 4, "extract": 4, "new": 4, "clean": 4, "scan": 4, "befor": 4, "appli": 4, "save": 4, "instanc": 4, "recreat": 4, "qualiti": 9, "duv": 9, "duv_scor": 9, "ruv": 9, "ruv_scor": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Package usage example": [[1, "package-usage-example"]], "Content:": [[1, "content"]], "Feature List": [[2, "feature-list"]], "Creating example data (exceptionally messy dataframe)": [[3, "creating-example-data-exceptionally-messy-dataframe"]], "Defining specification for the dataframe <a class=\"anchor\" id=\"basic-specification\"></a>": [[3, "defining-specification-for-the-dataframe-a-class-anchor-id-basic-specification-a"]], "Initializing Refiner class  <a name=\"initializning-refiner-class\"></a>": [[3, "initializing-refiner-class-a-name-initializning-refiner-class-a"]], "Use of simple general conditions <a class=\"anchor\" id=\"simple-general-conditions\"></a>": [[3, "use-of-simple-general-conditions-a-class-anchor-id-simple-general-conditions-a"]], "Check independent conditions <a class=\"anchor\" id=\"check-independent-conditions\"></a>": [[3, "check-independent-conditions-a-class-anchor-id-check-independent-conditions-a"]], "moulding types <a class=\"anchor\" id=\"moulding-types\"></a>": [[3, "moulding-types-a-class-anchor-id-moulding-types-a"]], "Using the main function to detect unexpected values <a class=\"anchor\" id=\"detect-unexpected\"></a>": [[3, "using-the-main-function-to-detect-unexpected-values-a-class-anchor-id-detect-unexpected-a"]], "Using function to replace unexpected values with missing types <a class=\"anchor\" id=\"replace-unexpected\"></a>": [[3, "using-function-to-replace-unexpected-values-with-missing-types-a-class-anchor-id-replace-unexpected-a"]], "Use of complex targeted conditions <a class=\"anchor\" id=\"complex-targeted-conditions\"></a>": [[3, "use-of-complex-targeted-conditions-a-class-anchor-id-complex-targeted-conditions-a"]], "Scores": [[3, "scores"]], "Refiner class settings <a name=\"refiner-class-settings\"></a>": [[4, "refiner-class-settings-a-name-refiner-class-settings-a"]], "Initializing Refiner class": [[4, "initializing-refiner-class"]], "using the main function to detect unexpected values": [[4, "using-the-main-function-to-detect-unexpected-values"]], "extracting Refiner settings <a name=\"extracting-refiner-class-settings\"></a>": [[4, "extracting-refiner-settings-a-name-extracting-refiner-class-settings-a"]], "Initializing new clean Refiner": [[4, "initializing-new-clean-refiner"]], "scanning dataframe for unexpected conditions <a name=\"scanning-dataframe\"></a>": [[4, "scanning-dataframe-for-unexpected-conditions-a-name-scanning-dataframe-a"]], "detection before applying settings": [[4, "detection-before-applying-settings"]], "using saved refiner settings for new instance <a name=\"recreating-refiner-class-settings\"></a>": [[4, "using-saved-refiner-settings-for-new-instance-a-name-recreating-refiner-class-settings-a"]], "refineryframe": [[6, "refineryframe"], [0, "refineryframe"], [5, "refineryframe"], [7, "refineryframe"]], "refineryframe package": [[8, "refineryframe-package"]], "Submodules": [[8, "submodules"]], "refineryframe.demo module": [[8, "module-refineryframe.demo"]], "refineryframe.detect_unexpected module": [[8, "module-refineryframe.detect_unexpected"]], "Parameters:": [[8, "parameters"], [8, "id1"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id15"], [8, "id17"], [8, "id21"], [8, "id23"]], "Returns:": [[8, "returns"], [8, "id2"], [8, "id4"], [8, "id6"], [8, "id8"], [8, "id16"], [8, "id18"], [8, "id22"]], "Parameters": [[8, "id9"], [8, "id11"], [8, "id13"], [8, "id19"]], "Returns": [[8, "id10"], [8, "id12"], [8, "id14"], [8, "id20"]], "refineryframe.other module": [[8, "module-refineryframe.other"]], "refineryframe.refiner module": [[8, "module-refineryframe.refiner"]], "refineryframe.replace_unexpected module": [[8, "module-refineryframe.replace_unexpected"]], "Module contents": [[8, "module-refineryframe"]], "Data quality scores <a class=\"anchor\" id=\"scores\"></a>": [[9, "data-quality-scores-a-class-anchor-id-scores-a"]], "DUV score <a class=\"anchor\" id=\"duv_scores\"></a>": [[9, "duv-score-a-class-anchor-id-duv-scores-a"]], "RUV scores <a class=\"anchor\" id=\"ruv_scores\"></a>": [[9, "ruv-scores-a-class-anchor-id-ruv-scores-a"]], "Installation": [[0, "installation"], [5, "installation"], [7, "installation"]], "Welcome to documentation for refineryframe package!": [[5, "welcome-to-documentation-for-refineryframe-package"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]]}, "indexentries": {}})